<?php

namespace MeteoConcept\HCaptchaBundle\Form;

/**
 * Stores the values put in the POST request by hCaptcha
 *
 * This class is mostly there for type safety. It's used both by the HCaptchaFormType and the IsValidCaptcha constraint.
 */
final class HCaptchaResponse
{
    /**
     * @var string The opaque challenge response generated by the hCaptcha
     * widget when the user solves the CAPTCHA
     */
    private string $response;

    /**
     * @var string|null The user's IP, this is not strictly necessary according to
     * hCaptcha
     */
    private ?string $remoteIp;

    /**
     * @var string|null The hCaptcha site key configured for the form, this is an
     * optional but recommended field in the hCaptcha verification request
     */
    private ?string $siteKey;

    /**
     * Constructs an immutable instance of HCaptchaResponse from a hCaptcha response and a user's IP address
     *
     * @param $response string The user's response to the CAPTCHA
     * challenge
     * @param $remoteIp string The user's IP address
     */
    public function __construct(string $response, ?string $remoteIp, ?string $siteKey)
    {
        $this->response = $response;
        $this->remoteIp = $remoteIp;
        $this->siteKey  = $siteKey;
    }

    /**
     * Gets the CAPTCHA challenge response
     *
     * @return string The CAPTCHA challenge response set at the construction of
     * the instance
     */
    public function getResponse(): string
    {
        return $this->response;
    }

    /**
     * Gets the user's IP address
     *
     * @return string|null The user's IP address set at the construction of the
     * instance
     */
    public function getRemoteIp(): ?string
    {
        return $this->remoteIp;
    }

    /**
     * Gets the hCaptcha site key
     *
     * @return string|null The hCaptcha site key configured for the form, to be
     * sent back in the hCaptcha verification request
     */
    public function getSiteKey(): ?string
    {
        return $this->siteKey;
    }
}
